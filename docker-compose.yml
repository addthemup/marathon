version: '3.8'

services:
  backend:
    build:
      context: ./backend
    container_name: django_app
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - ./backend/.env
    expose:
      - "8000"
    depends_on:
      - db  
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/ || exit 1"]
      interval: 60s  # Reduced health check frequency
      timeout: 10s
      retries: 5
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--log-level", "info", "backend.wsgi:application"]
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: react_app
    ports:
      - "80:80"
    restart: always
    environment:
      NODE_OPTIONS: "--max-old-space-size=512"  # Limit memory usage for Vite
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:13-alpine  # Use a slimmer image
    container_name: postgres_db
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_DB: marathon
      POSTGRES_USER: awc
      POSTGRES_PASSWORD: Starbury03
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U awc || exit 1"]  
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:alpine  # Use a slimmer image
    container_name: nginx_proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - backend  
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  static_volume:
  media_volume:
