version: '3.8'

services:
  backend:
    build: ./backend
    container_name: django_app
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles  # Shared volume for static files
      - media_volume:/app/media  # Shared volume for media files
    env_file:
      - ./backend/.env  # Ensure the .env file has the correct environment variables
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy  # Wait for db to pass health check
    restart: always

  frontend:
    build: ./frontend
    container_name: react_app
    volumes:
      - ./frontend:/app
    expose:
      - "5173"
    environment:
      - HOST=0.0.0.0
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    restart: always

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: marathon
      POSTGRES_USER: awc
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password  # Use Docker secret for password
      POSTGRES_INITDB_ARGS: "--username=postgres --pwfile=/run/secrets/postgres_password"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount SQL script for initialization
    restart: always
    secrets:
      - postgres_password  # Secure handling of the default superuser password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8080:80"  # Map external port 8080 to container port 80
      - "4443:443" # Map external port 4443 to container port 443
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles  # Serve static files from shared volume
      - media_volume:/app/media  # Serve media files from shared volume
    depends_on:
      backend:
        condition: service_healthy  # Wait until backend is healthy
    restart: always

volumes:
  postgres_data:
  static_volume:  # Named volume for static files shared between backend and Nginx
  media_volume:   # Named volume for media files shared between backend and Nginx

secrets:
  postgres_password:
    file: ./postgres_password.txt  # This file should contain your superuser password in plain text
