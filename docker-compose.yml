version: '3'
services:
  backend:
    build: ./backend
    container_name: django_app
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - ENVIRONMENT=production  # Use 'production' settings
      - DJANGO_DB_HOST=db        # Set the database host to the 'db' service
      - DJANGO_DB_NAME=marathon  # Set the database name
      - DJANGO_DB_USER=awc       # Set PostgreSQL user
      - DJANGO_DB_PASSWORD=Starbury03  # Set PostgreSQL password
    command: gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
    restart: always  # Ensures the container restarts if it crashes or fails

  frontend:
    build: ./frontend
    container_name: react_app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    environment:
      - HOST=0.0.0.0
    command: npm run dev -- --host 0.0.0.0
    restart: always  # Ensures the container restarts if it crashes or fails

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: marathon
      POSTGRES_USER: awc
      POSTGRES_PASSWORD: Starbury03
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U awc"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

volumes:
  postgres_data:
