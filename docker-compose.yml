version: '3.8'

services:
  backend:
    build: ./backend
    container_name: django_app
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles  # Shared volume for static files
      - media_volume:/app/media  # Shared volume for media files
    env_file:
      - ./backend/.env  # Load environment variables from the .env file
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy  # Wait for db to pass health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--log-level", "info", "backend.wsgi:application"]
    restart: always

  frontend:
    build: ./frontend
    container_name: react_app
    volumes:
      - ./frontend:/app
    expose:
      - "5173"
    environment:
      - HOST=0.0.0.0
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: marathon
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Starbury03
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8080:80"
      - "4443:443"
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      backend:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://django_app:8000/ || exit 1"]  # Consistent naming with the service name
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  static_volume:  # Named volume for static files shared between backend and Nginx
  media_volume:   # Named volume for media files shared between backend and Nginx

secrets:
  postgres_password:
    file: ./postgres_password.txt  # This file should contain your superuser password in plain text
